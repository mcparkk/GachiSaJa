/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-04-18 01:20:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Connection;
import db.DBManager;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("db.DBManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery library -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Popper JS -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("    \r\n");

	String pageStr = request.getParameter("page");
	int pageNum	= 0;
	//if (pageStr == null) pageStr = "1";
	try{
	pageNum = Integer.parseInt(pageStr);
	} catch(NumberFormatException e){
		pageNum = 1;
	}
	int startRow = 0;
	int endRow = 0;
	int total = 0;
	endRow = pageNum * 10;
	startRow = endRow - 9;
	
	
	try {
		DBManager db = DBManager.getInstance();
		Connection con = db.open();

		
		String sql2 = "select count(*) from article"; //역순 정렬 desending<->asc
		PreparedStatement stmt2 = con.prepareStatement(sql2);
		
		ResultSet rs2 = stmt2.executeQuery();
		if(rs2.next()){
			total = rs2.getInt("count(*)");
		}
		
		// 3. Query 실행 준비
		String sql = "select *from article order by id desc" + "   limit ?,10"; //역순 정렬 desending<->asc
		PreparedStatement stmt = con.prepareStatement(sql);
		stmt.setInt(1, startRow - 1);
		
		ResultSet rs = stmt.executeQuery();
// 		<div class="card" style="width:500px">
// 		  <img class="card-img-top" src="img_avatar1.png" alt="Card image">
// 		  <div class="card-img-overlay">
// 		    <h4 class="card-title">John Doe</h4>
// 		    <p class="card-text">Some example text.</p>
// 		    <a href="#" class="btn btn-primary">See Profile</a>
// 		  </div>
// 		</div>
		
		while (rs.next()) {
			String id = rs.getString("id");
			String title = rs.getString("title");
			String content = rs.getString("content");
			String hit = rs.getString("hit"); 
			String id2 = rs.getString("id2");
			// 절대경로 		http://localhost/jspBoard/view.jsp?id=1
			// 상대경로		view.jsp?id=1
			//out.println("<a href='view.jsp?id=" + id + "'>" + id + "/" + title + "/" + id2 + "</a><br>");

      out.write("\r\n");
      out.write("\t\t\t<div class=\"card\" style=\"width:200px\">\r\n");
      out.write(" \t\t  \r\n");
      out.write(" \t\t  <div class=\"card-body\">\r\n");
      out.write(" \t\t    <h4 class=\"card-title\">");
      out.print(title);
      out.write("</h4>\r\n");
      out.write(" \t\t    <p class=\"card-text\">");
      out.print(content );
      out.write("</p>\r\n");
      out.write(" \t\t    <a href=\"view.jsp?id=");
      out.print(id);
      out.write("\" class=\"btn btn-primary\">");
      out.print(id);
      out.write("</a>\r\n");
      out.write(" \t\t  </div>\r\n");
      out.write(" \t\t</div>\r\n");
 
		}
		int startPage = 0;
		startPage = (pageNum - 1) / 10 * 10 + 1;

		int endPage = 0;
		endPage = startPage + 9;
		
		int totalPage = 0; // 전체 페이지 수 4를 도출
		if (total % 10 == 0) { // 10 20 30 40
			totalPage = total / 10;
		} else {
			totalPage = total / 10 + 1;
		}
		
		if(endPage > totalPage) endPage = totalPage;
		
		
//		if(startPage>1)out.println("<a href='list.jsp?page=" + (startPage-1) + "'> << </a>");
// 		<ul class="pagination">
// 		  <li class="page-item"><a class="page-link" href="#">Previous</a></li>
// 		  <li class="page-item"><a class="page-link" href="#">1</a></li>
// 		  <li class="page-item active"><a class="page-link" href="#">2</a></li>
// 		  <li class="page-item"><a class="page-link" href="#">3</a></li>
// 		  <li class="page-item"><a class="page-link" href="#">Next</a></li>
// 		</ul>
		out.print("<ul class='pagination'>");
		for(int i = startPage; i <= endPage; i++){

      out.write("\r\n");
      out.write("\t\t\t <li class=\"page-item\">\r\n");
      out.write("\t\t\t\t<a class=\"page-link\" href=\"list.jsp?page=");
      out.print(i);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t");
      out.print(i);
      out.write("\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t</li>\r\n");
 
//		out.println("<a href='list.jsp?page=" + i + "'>" +i+ "</a>");
		}
		out.print("</ul>");	
			// ("<a href='주소'>")
			//<a href='list.jsp?page=2'> 내용 </a>
		
		
	//	if(endPage<totalPage)out.println("<a href='list.jsp?page=" + (endPage+1) + "'> >> </a>");


	} catch (ClassNotFoundException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}

      out.write('	');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
